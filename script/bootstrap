#!/usr/bin/env bash
#
# bootstrap installs things.

cd "$(dirname "$0")/.."
DOTFILES_ROOT="$(pwd -P)"

set -e

echo ""

info () {
  printf "\r  [ \033[00;34m..\033[0m ] $1\n"
}

user () {
  printf "\r  [ \033[0;33m??\033[0m ] $1\n"
}

success () {
  printf "\r\033[2K  [ \033[00;32mOK\033[0m ] $1\n"
}

fail () {
  printf "\r\033[2K  [\033[0;31mFAIL\033[0m] $1\n"
  echo ''
  exit
}

choose_local_dotfiles () {
  dotfiles_paths=( $(find "$HOME/Documents" -type d -name "dotfiles" 2>/dev/null) )

  if [ ${#dotfiles_paths[@]} -eq 0 ]; then
      fail "dotfile not found in $HOME/Documents"
  fi

  user "Select dotfiles:"
  for i in "${!dotfiles_paths[@]}"; do
      printf "    %d) %s\n" "$((i+1))" "${dotfiles_paths[$i]}"
  done

  read n
  if [[ "$n" =~ ^[0-9]+$ ]] && [ "$n" -ge 1 ] && [ "$n" -le "${#dotfiles_paths[@]}" ]; then
    export DOTFILES_LOCAL="${dotfiles_paths[$((n-1))]}"
    success "use $DOTFILES_LOCAL"
  else
    fail "wrong number"
  fi
}


setup_gitconfig () {
  if test ! -f git/gitconfig.local.symlink
  then
    info "setup gitconfig"

    if test -f $DOTFILES_LOCAL/git/gitconfig.local.symlink
    then
      ln -s $DOTFILES_LOCAL/git/gitconfig.local.symlink git/gitconfig.local.symlink
      success "gitconfig linked"
      return
    fi

    git_credential="cache"
    if [ "$(uname -s)" == "Darwin" ]
    then
      git_credential="osxkeychain"
    fi

    user " - What is your github author name?"
    read -e git_authorname
    user " - What is your github author email?"
    read -e git_authoremail

    sed -e "s/AUTHORNAME/$git_authorname/g" -e "s/AUTHOREMAIL/$git_authoremail/g" -e "s/GIT_CREDENTIAL_HELPER/$git_credential/g" git/gitconfig.local.symlink.example > git/gitconfig.local.symlink

    success "gitconfig"
  fi
}

setup_brewfile () {
  if test ! -f Brewfile.local && test -f $DOTFILES_LOCAL/homebrew/Brewfile.local
  then
    ln -s $DOTFILES_LOCAL/homebrew/Brewfile.local Brewfile.local
    success "brewfile linked"
    return
  fi
}


link_file () {
  local src=$1 dst=$2

  local overwrite= backup= skip=
  local action=

  if [ -f "$dst" -o -d "$dst" -o -L "$dst" ]
  then

    if [ "$overwrite_all" == "false" ] && [ "$backup_all" == "false" ] && [ "$skip_all" == "false" ]
    then

      local currentSrc="$(readlink $dst)"

      if [ "$currentSrc" == "$src" ]
      then

        skip=true;

      else

        user "File already exists: $dst ($(basename "$src")), what do you want to do?\n\
        [s]kip, [S]kip all, [o]verwrite, [O]verwrite all, [b]ackup, [B]ackup all?"
        read -n 1 action

        case "$action" in
          o )
            overwrite=true;;
          O )
            overwrite_all=true;;
          b )
            backup=true;;
          B )
            backup_all=true;;
          s )
            skip=true;;
          S )
            skip_all=true;;
          * )
            ;;
        esac

      fi

    fi

    overwrite=${overwrite:-$overwrite_all}
    backup=${backup:-$backup_all}
    skip=${skip:-$skip_all}

    if [ "$overwrite" == "true" ]
    then
      rm -rf "$dst"
      success "removed $dst"
    fi

    if [ "$backup" == "true" ]
    then
      mv "$dst" "${dst}.backup"
      success "moved $dst to ${dst}.backup"
    fi

    if [ "$skip" == "true" ]
    then
      success "skipped $src"
    fi
  fi

  if [ "$skip" != "true" ]  # "false" or empty
  then
    ln -s "$1" "$2"
    success "linked $1 to $2"
  fi
}

install_dotfiles () {
  info 'installing dotfiles'

  local overwrite_all=false backup_all=false skip_all=false

  for src in $(find -H "$DOTFILES_ROOT" -maxdepth 2 -name "*.symlink" -not -path "*.git*")
  do
    dst="$HOME/.$(basename "${src%.*}")"
    link_file "$src" "$dst"
  done
}

choose_local_dotfiles
setup_gitconfig
setup_brewfile
install_dotfiles

# If we're on a Mac, let's install and setup homebrew.
if [ "$(uname -s)" == "Darwin" ]
then
  info "installing dependencies"
  if source bin/dot | while read -r data; do info "$data"; done
  then
    success "dependencies installed"
  else
    fail "error installing dependencies"
  fi
fi

echo ""
echo "  All installed!"
